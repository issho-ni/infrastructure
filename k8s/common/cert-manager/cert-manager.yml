---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-cainjector
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-webhook
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
  annotations:
    iam.gke.io/gcp-service-account: common-cert-manager@issho-ni.iam.gserviceaccount.com

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: cert-manager-cainjector
  labels:
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
rules:
  - apiGroups: ["certmanager.k8s.io"]
    resources: ["certificates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps", "events"]
    verbs: ["*"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources:
      ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["*"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-cainjector
  labels:
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-cainjector
subjects:
  - name: cert-manager-cainjector
    namespace: cert-manager
    kind: ServiceAccount

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: cert-manager
  labels:
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
rules:
  - apiGroups: ["certmanager.k8s.io"]
    resources:
      - certificates
      - certificates/finalizers
      - issuers
      - clusterissuers
      - orders
      - orders/finalizers
      - challenges
      - challenges/finalizers
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "events", "services", "pods"]
    verbs: ["*"]
  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/finalizers"]
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: cert-manager
  labels:
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager
subjects:
  - name: cert-manager
    namespace: "cert-manager"
    kind: ServiceAccount

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-view
  labels:
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["certmanager.k8s.io"]
    resources: ["certificates", "issuers"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-edit
  labels:
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["certmanager.k8s.io"]
    resources: ["certificates", "issuers"]
    verbs: ["create", "delete", "deletecollection", "patch", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-webhook:auth-delegator
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: cert-manager-webhook
    namespace: cert-manager

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: cert-manager-webhook:webhook-authentication-reader
  namespace: kube-system
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: cert-manager-webhook
    namespace: cert-manager

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-webhook:webhook-requester
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
rules:
  - apiGroups:
      - admission.certmanager.k8s.io
    resources:
      - certificates
      - issuers
      - clusterissuers
    verbs:
      - create

---
apiVersion: v1
kind: Service
metadata:
  name: cert-manager-webhook
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: 6443
  selector:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cert-manager-cainjector
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
  annotations:
    flux.weave.works/tag.cainjector: semver:~0
    flux.weave.works/automated: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: cert-manager
    spec:
      serviceAccountName: cert-manager-cainjector
      containers:
        - name: cainjector
          image: quay.io/jetstack/cert-manager-cainjector:v0.8.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --leader-election-namespace=$(POD_NAMESPACE)
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cert-manager-webhook
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
  annotations:
    flux.weave.works/tag.webhook: semver:~0
    flux.weave.works/automated: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: cert-manager
    spec:
      serviceAccountName: cert-manager-webhook
      containers:
        - name: webhook
          image: quay.io/jetstack/cert-manager-webhook:v0.8.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --secure-port=6443
            - --tls-cert-file=/certs/tls.crt
            - --tls-private-key-file=/certs/tls.key
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: certs
              mountPath: /certs
      volumes:
        - name: certs
          secret:
            secretName: cert-manager-webhook-tls

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cert-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
  annotations:
    flux.weave.works/tag.cert-manager: semver:~0
    flux.weave.works/tag.prometheus-to-sd: semver:~0
    flux.weave.works/automated: "true"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: cert-manager
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: cert-manager
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "9402"
        readiness.status.sidecar.istio.io/applicationPorts: ""
    spec:
      serviceAccountName: cert-manager
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: cert-manager
          image: quay.io/jetstack/cert-manager-controller:v0.8.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --cluster-resource-namespace=$(POD_NAMESPACE)
            - --leader-election-namespace=$(POD_NAMESPACE)
          ports:
            - containerPort: 9402
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        - name: prometheus-to-sd
          image: gcr.io/google-containers/prometheus-to-sd:v0.5.2
          ports:
            - name: profiler
              containerPort: 6060
          command:
            - /monitor
            - --stackdriver-prefix=custom.googleapis.com
            - --source=$(POD_NAME):http://localhost:9402/metrics
            - --pod-id=$(POD_NAME)
            - --namespace-id=$(POD_NAMESPACE)
            - --scrape-interval=5s
            - --export-interval=30s
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.admission.certmanager.k8s.io
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
  annotations:
    certmanager.k8s.io/inject-ca-from: cert-manager/cert-manager-webhook-tls
spec:
  group: admission.certmanager.k8s.io
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: cert-manager-webhook
    namespace: "cert-manager"
  version: v1beta1

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: cert-manager-webhook-selfsign
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  selfSigned: {}

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: cert-manager-webhook-ca
  namespace: cert-manager
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  secretName: cert-manager-webhook-ca
  duration: 43800h # 5y
  issuerRef:
    name: cert-manager-webhook-selfsign
  commonName: "ca.webhook.cert-manager"
  isCA: true

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: cert-manager-webhook-ca
  namespace: "cert-manager"
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  ca:
    secretName: cert-manager-webhook-ca

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: cert-manager-webhook-tls
  namespace: "cert-manager"
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  secretName: cert-manager-webhook-tls
  duration: 8760h # 1y
  issuerRef:
    name: cert-manager-webhook-ca
  dnsNames:
    - cert-manager-webhook
    - cert-manager-webhook.cert-manager
    - cert-manager-webhook.cert-manager.svc

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: cert-manager-webhook
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
  annotations:
    certmanager.k8s.io/inject-apiserver-ca: "true"
webhooks:
  - name: certificates.admission.certmanager.k8s.io
    namespaceSelector:
      matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
            - "true"
        - key: name
          operator: NotIn
          values:
            - cert-manager
    rules:
      - apiGroups:
          - certmanager.k8s.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - certificates
    failurePolicy: Fail
    clientConfig:
      service:
        name: kubernetes
        namespace: default
        path: /apis/admission.certmanager.k8s.io/v1beta1/certificates
  - name: issuers.admission.certmanager.k8s.io
    namespaceSelector:
      matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
            - "true"
        - key: name
          operator: NotIn
          values:
            - cert-manager
    rules:
      - apiGroups:
          - certmanager.k8s.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - issuers
    failurePolicy: Fail
    clientConfig:
      service:
        name: kubernetes
        namespace: default
        path: /apis/admission.certmanager.k8s.io/v1beta1/issuers
  - name: clusterissuers.admission.certmanager.k8s.io
    namespaceSelector:
      matchExpressions:
        - key: certmanager.k8s.io/disable-validation
          operator: NotIn
          values:
            - "true"
        - key: name
          operator: NotIn
          values:
            - cert-manager
    rules:
      - apiGroups:
          - certmanager.k8s.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clusterissuers
    failurePolicy: Fail
    clientConfig:
      service:
        name: kubernetes
        namespace: default
        path: /apis/admission.certmanager.k8s.io/v1beta1/clusterissuers

---
apiVersion: v1
kind: Secret
metadata:
  name: cert-manager-webhook-tls
  namespace: cert-manager
type: Opaque
