---
# Source: traefik/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik
  namespace: default
  labels:
    app: traefik
    chart: traefik-1.72.1
    release: "traefik"
    heritage: "Tiller"
data:
  traefik.toml: |
    # traefik.toml
    logLevel = "info"
    InsecureSkipVerify = true
    defaultEntryPoints = ["http","https"]
    [entryPoints]
      [entryPoints.http]
      address = ":80"
        [entryPoints.http.redirect]
        regex = "^http://(.*)"
        replacement = "https://$1"
        permanent = true
        [entryPoints.http.proxyProtocol]
        trustedIPs = ["127.0.0.1"]
        [entryPoints.http.forwardedHeaders]
        trustedIPs = ["127.0.0.1"]
      [entryPoints.https]
      address = ":443"
        [entryPoints.https.tls]
          [[entryPoints.https.tls.certificates]]
          CertFile = "/ssl/tls.crt"
          KeyFile = "/ssl/tls.key"
        [entryPoints.https.proxyprotocol]
        trustedIPs = ["127.0.0.1"]
        [entryPoints.https.forwardedHeaders]
        trustedIPs = ["127.0.0.1"]
      [entryPoints.traefik]
      address = ":8080"
    [ping]
    entryPoint = "http"
    [kubernetes]
      [kubernetes.ingressEndpoint]
      hostname = "localhost"
      ip = "0.0.0.0"
      publishedService = "default/traefik"
    [traefikLog]
    format = "json"
    [acme]
    KeyType = "RSA4096"
    email = "ops@issho-ni.co"
    storage = "traefik/acme/account"
    entryPoint = "https"
    onHostRule = true
      [acme.dnsChallenge]
      provider = "gcloud"
      delayBeforeCheck = 60
    [api]
    entryPoint = "traefik"
    dashboard = true
    [metrics]
      [metrics.prometheus]
      entryPoint = "traefik"
    [consul]
    endpoint = "consul.default.svc.cluster.local:8500"
    watch = false

---
# Source: traefik/templates/rbac.yaml

kind: ServiceAccount
apiVersion: v1
metadata:
  name: traefik
  namespace: default
  annotations:
    iam.gke.io/gcp-service-account: common-traefik@issho-ni.iam.gserviceaccount.com
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: default
---
# Source: traefik/templates/dashboard-service.yaml

apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  namespace: default
  labels:
    app: traefik
    chart: traefik-1.72.1
    release: "traefik"
    heritage: "Tiller"
spec:
  type: ClusterIP
  selector:
    app: traefik
    release: traefik
  ports:
  - name: dashboard-http
    port: 80
    targetPort: 8080
---
# Source: traefik/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: default
  labels:
    app: traefik
    chart: traefik-1.72.1
    release: "traefik"
    heritage: "Tiller"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: traefik
    release: traefik
  ports:
  - port: 80
    name: http
    targetPort: http
  - port: 443
    name: https
    targetPort: https
---
# Source: consul/templates/pod-dist-budget.yaml

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "traefik"
  labels:
    app: traefik
    release: "traefik"
    chart: traefik-1.72.1
    heritage: "Tiller"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: traefik
      release: "traefik"
---
# Source: traefik/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: default
  labels:
    app: traefik
    chart: traefik-1.72.1
    release: "traefik"
    heritage: "Tiller"
  annotations:
    flux.weave.works/tag.traefik: semver:~1
    flux.weave.works/automated: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefik
      release: traefik
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: traefik
        chart: traefik-1.72.1
        release: "traefik"
        heritage: "Tiller"
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:1.7.13
        name: traefik
        resources: {}
        readinessProbe:
          httpGet:
            path: /ping
            port: 80
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 80
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        env:
        - name: GCE_PROJECT
          valueFrom:
            secretKeyRef:
              name: traefik-dnsprovider-config
              key: GCE_PROJECT
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /ssl
          name: ssl
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: httpn
          containerPort: 8880
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: dash
          containerPort: 8080
          protocol: TCP
        args:
        - --configfile=/config/traefik.toml
      volumes:
      - name: config
        configMap:
          name: traefik
      - name: ssl
        secret:
          secretName: traefik-default-cert
