---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: oauth2-proxy
    chart: oauth2-proxy-0.13.0
    heritage: Tiller
    release: oauth2-proxy
  name: oauth2-proxy
data:
  oauth2_proxy.cfg: |
    cookie_domain = "issho-ni.co"
    email_domains = [ "*" ]
    github_org = "issho-ni"
    github_team = "ops"
    provider = "github"
    set_xauthrequest = true
    set_authorization_header = true
    upstreams = [ "file:///dev/null" ]
    whitelist_domain = ".issho-ni.co"

---
# Source: oauth2-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oauth2-proxy
    chart: oauth2-proxy-0.13.0
    release: oauth2-proxy
    heritage: Tiller
  name: oauth2-proxy
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: oauth2-proxy
    release: oauth2-proxy

---
# Source: oauth2-proxy/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy
    chart: oauth2-proxy-0.13.0
    heritage: Tiller
    release: oauth2-proxy
  name: oauth2-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oauth2-proxy
      release: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
        release: "oauth2-proxy"
    spec:
      containers:
        - name: oauth2-proxy
          image: "quay.io/pusher/oauth2_proxy:v3.2.0"
          imagePullPolicy: IfNotPresent
          args:
            - --http-address=0.0.0.0:4180
            - --config=/etc/oauth2_proxy/oauth2_proxy.cfg
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: client-id
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: client-secret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: cookie-secret
          ports:
            - containerPort: 4180
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
            successThreshold: 1
            periodSeconds: 10
          resources: {}

          volumeMounts:
            - mountPath: /etc/oauth2_proxy
              name: configmain
      volumes:
        - configMap:
            defaultMode: 420
            name: oauth2-proxy
          name: configmain
      tolerations: []

---
# Source: oauth2-proxy/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: oauth2-proxy
    chart: oauth2-proxy-0.13.0
    heritage: Tiller
    release: oauth2-proxy
  name: oauth2-proxy
  annotations:
    ingress.kubernetes.io/custom-request-headers: "l5d-dst-override: oauth2-proxy.default.svc.cluster.local:80"
    ingress.kubernetes.io/custom-response-headers: "l5d-remote-ip: || l5d-server-id:"
spec:
  rules:
    - host: auth.ops.issho-ni.co
      http:
        paths:
          - path: /
            backend:
              serviceName: oauth2-proxy
              servicePort: 80
